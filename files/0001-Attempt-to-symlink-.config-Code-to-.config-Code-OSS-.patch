From efa481683f11079230cc7e3b3477272eb67f1b41 Mon Sep 17 00:00:00 2001
From: Joshua Strobl <joshua@streambits.io>
Date: Fri, 11 Dec 2020 18:49:32 +0200
Subject: [PATCH 1/1] Attempt to symlink .config/Code to .config/Code - OSS if
 Code does not exist.

This ensures some extensions that specifically check for Code will function. Additionally don't bother doing the platform checks. We're on Linux.
---
 src/paths.js | 39 +++++++++++++--------------------------
 1 file changed, 13 insertions(+), 26 deletions(-)

diff --git a/src/paths.js b/src/paths.js
index 2042123d72..5faf10fb40 100644
--- a/src/paths.js
+++ b/src/paths.js
@@ -6,6 +6,7 @@
 //@ts-check
 'use strict';
 
+const fs = require('fs');
 const pkg = require('../package.json');
 const path = require('path');
 const os = require('os');
@@ -15,34 +16,20 @@ const os = require('os');
  */
 function getDefaultUserDataPath() {
 
-	// Support global VSCODE_APPDATA environment variable
-	let appDataPath = process.env['VSCODE_APPDATA'];
-
-	// Otherwise check per platform
-	if (!appDataPath) {
-		switch (process.platform) {
-			case 'win32':
-				appDataPath = process.env['APPDATA'];
-				if (!appDataPath) {
-					const userProfile = process.env['USERPROFILE'];
-					if (typeof userProfile !== 'string') {
-						throw new Error('Windows: Unexpected undefined %USERPROFILE% environment variable');
-					}
-					appDataPath = path.join(userProfile, 'AppData', 'Roaming');
-				}
-				break;
-			case 'darwin':
-				appDataPath = path.join(os.homedir(), 'Library', 'Application Support');
-				break;
-			case 'linux':
-				appDataPath = process.env['XDG_CONFIG_HOME'] || path.join(os.homedir(), '.config');
-				break;
-			default:
-				throw new Error('Platform not supported');
-		}
+	let appDataPath = process.env['VSCODE_APPDATA'] || process.env['XDG_CONFIG_HOME'] || path.join(os.homedir(), '.config');
+	let codePath = path.join(appDataPath, pkg.name);
+
+	if (pkg.name == "Code - OSS") { // OSS equivelant
+		let nonOSSPath = path.join(appDataPath, "Code");
+
+		fs.access(nonOSSPath, fs.constants.F_OK, (error) => { // Access the path
+			if (error) { // File doesn't exist
+				fs.symlinkSync(codePath, nonOSSPath); // Symlink Code - OSS to Code
+			}
+		})
 	}
 
-	return path.join(appDataPath, pkg.name);
+	return codePath;
 }
 
 exports.getDefaultUserDataPath = getDefaultUserDataPath;
-- 
2.29.2

